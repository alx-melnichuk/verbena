# -----------------------------------------------------------------------------
# RUST_LOG
# -----------------------------------------------------------------------------
# for release
# RUST_LOG=info,actix_web=info,actix_server=info,verbena_backend=info

# for debugging
L_COMM=info,actix_web=info,actix_server=info
L_MAIN=verbena_backend=debug
#L_DBASE=verbena_backend::dbase=info
L_USER=users::user_controller=debug
L_USER_AUTH=users::user_auth_controller=debug
L_AUTH=extractors::authentication=debug

RUST_LOG=${L_COMM},${L_MAIN},${L_DBASE},${L_USER},${L_USER_AUTH},${L_AUTH}

# -----------------------------------------------------------------------------

APP_HOST=127.0.0.1
APP_PORT=8080
APP_PROTOCOL=http
# Token activity time in cookies (in minutes) = 60 minutes.
APP_MAX_AGE=60
# Waiting time for registration confirmation (in minutes) = 15 minutes
APP_REGISTR_DURATION=15
# Waiting time for password recovery confirmation (in minutes) = 10 minutes
APP_RECOVERY_DURATION=10


# -----------------------------------------------------------------------------
# Database (PostgreSQL)
# -----------------------------------------------------------------------------
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=
DB_USER=
DB_PASSWORD=
# Don't worry about the placeholders. Rust supports this feature.
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}

# -----------------------------------------------------------------------------
# JSON Web Token Credentials
# -----------------------------------------------------------------------------
JWT_SECRET_KEY=jwt_secret_key
JWT_MAXAGE=60
#  15 minutes;
JWT_ACCESS_TOKEN_DURATION=15
#  7 days = (60*24)Ã—7=10080 minutes;
JWT_REFRESH_TOKEN_DURATION=10080

# -----------------------------------------------------------------------------
# SMTP
# -----------------------------------------------------------------------------
SMTP_HOST=
SMTP_PORT=
SMTP_USER=
SMTP_PASS=
SMTP_SENDER=

