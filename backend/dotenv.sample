# Example .env file

# -----------------------------------------------------------------------------
# RUST_LOG
# -----------------------------------------------------------------------------
# for release
# RUST_LOG=info,actix_web=info,actix_server=info,verbena_backend=info

# for debugging
L_COMM=info,actix_web=info,actix_server=info
L_MAIN=verbena_backend=debug
#L_DBASE=verbena_backend::dbase=info
L_USER=users::user_controller=debug
L_USER_AUTH=users::user_auth_controller=debug
L_AUTH=extractors::authentication=debug

RUST_LOG=${L_COMM},${L_MAIN},${L_DBASE},${L_USER},${L_USER_AUTH},${L_AUTH}

# -----------------------------------------------------------------------------
# Application properties
# -----------------------------------------------------------------------------
APP_HOST=127.0.0.1
# Takes values: "http" | "https". Default: "http".
#APP_PROTOCOL=http
APP_PROTOCOL=https
# Default: 80 - for the "http" protocol, 443 - for the "https" protocol.
#APP_PORT=8080
APP_PORT=8443
# Maximum number of seconds the results can be cached. (600 seconds  = 10 minutes)
APP_MAX_AGE=600
# Waiting time for registration confirmation (in seconds). (900 seconds = 15 minutes)
APP_REGISTR_DURATION=900
# Waiting time for password recovery confirmation (in seconds). (600 seconds  = 10 minutes)
APP_RECOVERY_DURATION=600
# Site name.
APP_NAME=Verb√©na
# SSL certificate and private key (for the "https" protocol)
APP_CERTIFICATE=example.crt.pem
# SSL private key (for the "https" protocol)
APP_PRIVATE_KEY=example.key.pem
# Cors permissions "allowed_origin" (array of values, comma delimited). There should be no spaces.
# APP_ALLOWED_ORIGIN=

# -----------------------------------------------------------------------------
# Database (PostgreSQL)
# -----------------------------------------------------------------------------
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=
DB_USER=
DB_PASSWORD=
# Don't worry about the placeholders. Rust supports this feature.
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}

# -----------------------------------------------------------------------------
# JSON Web Token Credentials
# -----------------------------------------------------------------------------
JWT_SECRET_KEY=jwt_secret_key
JWT_MAXAGE=60
#  15 minutes;
# Access token duration (in seconds). (900 seconds = 15 minutes)
JWT_ACCESS_TOKEN_DURATION=900
# Refresh token duration (in seconds). (345600 seconds = 4 days  60sec*60min*24hour*4days)
JWT_REFRESH_TOKEN_DURATION=345600

# -----------------------------------------------------------------------------
# SMTP
# -----------------------------------------------------------------------------
SMTP_HOST=
SMTP_PORT=
SMTP_USER=
SMTP_PASS=
SMTP_SENDER=

# -----------------------------------------------------------------------------
# Avatar Files
# -----------------------------------------------------------------------------
# Directory for temporary files.
AVATAR_FILES_DIR_TMP=./tmp
# Directory for storing avatar files.
AVATAR_FILES_DIR=./avatars
# Maximum size for avatar files.
AVATAR_FILES_MAX_SIZE=7MB
# List of valid input mime types for avatar files (comma delimited).
AVATAR_FILES_VALID_TYPES=jpeg,gif,png,bmp
# To reduce the size, the avatar file is saved with the specified mime type.
AVATAR_FILES_TYPE_TO_SAVE=png

